name: build_spigot_docker

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - README.md
  pull_request:
    branches:
      - master

jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      TITLE: Spigot
      GHCR_SLUG: ghcr.io/lifeismana/docker-spigot
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Repo metadata
        id: repo
        uses: actions/github-script@v4
        with:
          script: |
            const repo = await github.repos.get(context.repo);
            return repo.data;
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          platforms: |
            linux/amd64
            linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.GHCR_SLUG }}:latest
          cache-from: |
            ${{ env.GHCR_SLUG }}:latest
          labels: |
            maintainer=${{ github.repository_owner }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.title=${{ env.TITLE }}
            org.opencontainers.image.build-date=${{ steps.prepare.outputs.build_date }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.description=${{ fromJson(steps.repo.outputs.result).description }}
            org.opencontainers.image.source=${{ fromJson(steps.repo.outputs.result).html_url }}
            org.opencontainers.image.licenses=${{ fromJson(steps.repo.outputs.result).license.spdx_id }}
      - name: Check manifest
        shell: bash
        run: |
          if [ ${{github.event_name != 'pull_request'}} ]; then
            docker buildx imagetools inspect ${{ env.GHCR_SLUG }}:latest
          fi
      - name: Check pull
        shell: bash
        run: |
          if [ ${{github.event_name != 'pull_request'}} ]; then
            docker pull ${{ env.GHCR_SLUG }}:latest
            docker image inspect ${{ env.GHCR_SLUG }}:latest
          fi
